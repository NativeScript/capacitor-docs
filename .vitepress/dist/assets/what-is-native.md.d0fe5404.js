import{o as a,c as n,b as s}from"./app.0aaa57e5.js";const e='{"title":"What is \'native\'?","description":"","frontmatter":{},"headers":[{"level":2,"title":"Quick access","slug":"quick-access"}],"relativePath":"what-is-native.md","lastUpdated":1613522705297}',t={},o=s('<h1 id="what-is-native"><a class="header-anchor" href="#what-is-native" aria-hidden="true">#</a> What is &#39;native&#39;?</h1><p>The <code>native</code> object which <code>@nativescript/capacitor</code> provides is a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noopener noreferrer">JavaScript Proxy</a>.</p><p>This allows the api to be <em>active</em> only when run on the native platform via Capacitor. Otherwise it is completely <em>inactive</em> when used inside a standalone web browser.</p><p>The Proxy also allows each &quot;dot notation&quot; from it to translate and marshall &quot;in real time&quot; to your native platform.</p><h2 id="quick-access"><a class="header-anchor" href="#quick-access" aria-hidden="true">#</a> Quick access</h2><p>Using the <code>native</code> object is meant to be a quick access utility to anything you need from your native platform. It&#39;s also intended to be expanded upon with your own helper methods as you see fit.</p><p>It exposes platform API&#39;s as made public by each native platform.</p><p>All native properties which handle &quot;primitive&quot; types (string, number, boolean) use a standard interface for fetching native values from your platform device:</p><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">NativeProperty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>This means if you want to get your current device screen brightness, you could use something like this on iOS for example:</p><div class="language-typescript"><pre><code>native<span class="token punctuation">.</span>UIScreen<span class="token punctuation">.</span>mainScreen<span class="token punctuation">.</span>brightness<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>value <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// your screen brightness value</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n</code></pre></div>',11);t.render=function(s,e,t,p,c,i){return a(),n("div",null,[o])};export default t;export{e as __pageData};
