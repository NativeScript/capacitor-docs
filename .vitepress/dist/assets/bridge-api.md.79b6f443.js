import{o as n,c as a,b as s}from"./app.0aaa57e5.js";const t='{"title":"@nativescript/capacitor/bridge","description":"","frontmatter":{},"headers":[{"level":2,"title":"iosRootViewController","slug":"iosrootviewcontroller"},{"level":2,"title":"androidCreateDialog","slug":"androidcreatedialog"}],"relativePath":"bridge-api.md","lastUpdated":1613522705297}',p={},o=s('<h1 id="nativescript-capacitor-bridge"><a class="header-anchor" href="#nativescript-capacitor-bridge" aria-hidden="true">#</a> @nativescript/capacitor/bridge</h1><p>The bridge is fundamental to NativeScript for Capacitor and also exposes a few utility methods for quick usage.</p><h2 id="iosrootviewcontroller"><a class="header-anchor" href="#iosrootviewcontroller" aria-hidden="true">#</a> iosRootViewController</h2><ul><li><code>iosRootViewController()</code>: The root view controller of your Capacitor app.</li></ul><p>A helper that you, yourself, could write inside <code>src/nativescript</code> on your own. We provide it as a convenience because it is so handy and often used.</p><h4 id="example-usage"><a class="header-anchor" href="#example-usage" aria-hidden="true">#</a> Example usage:</h4><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> iosRootViewController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nativescript/capacitor/bridge&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> vc <span class="token operator">=</span> UIViewController<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nvc<span class="token punctuation">.</span>view<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> UIColor<span class="token punctuation">.</span>blueColor<span class="token punctuation">;</span>\n<span class="token function">iosRootViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">presentModalViewControllerAnimated</span><span class="token punctuation">(</span>vc<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>The source of the helper:</p><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">iosRootViewController</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>global<span class="token punctuation">.</span>android<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;iosRootViewController is iOS only.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> app <span class="token operator">=</span> UIApplication<span class="token punctuation">.</span>sharedApplication<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> win <span class="token operator">=</span>\n      app<span class="token punctuation">.</span>keyWindow <span class="token operator">||</span>\n      <span class="token punctuation">(</span>app<span class="token punctuation">.</span>windows <span class="token operator">&amp;&amp;</span> app<span class="token punctuation">.</span>windows<span class="token punctuation">.</span>count <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> app<span class="token punctuation">.</span>windows<span class="token punctuation">.</span><span class="token function">objectAtIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> vc <span class="token operator">=</span> win<span class="token punctuation">.</span>rootViewController<span class="token punctuation">;</span>\n    <span class="token keyword">while</span> <span class="token punctuation">(</span>vc <span class="token operator">&amp;&amp;</span> vc<span class="token punctuation">.</span>presentedViewController<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      vc <span class="token operator">=</span> vc<span class="token punctuation">.</span>presentedViewController<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> vc<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="androidcreatedialog"><a class="header-anchor" href="#androidcreatedialog" aria-hidden="true">#</a> androidCreateDialog</h2><ul><li><code>androidCreateDialog(view: () =&gt; android.view.View, id?: string)</code>: Create Android fragment dialogs on the fly.</li></ul><p>This method is another one that you, yourself, could write inside <code>src/nativescript</code>. It&#39;s another handy and convenient utility which can be used often for various native ui blending.</p><h4 id="example-usage-2"><a class="header-anchor" href="#example-usage-2" aria-hidden="true">#</a> Example usage:</h4><div class="language-typescript"><pre><code><span class="token function">androidCreateDialog</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> activity <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>global<span class="token punctuation">)</span><span class="token punctuation">.</span>androidCapacitorActivity<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> layout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android</span><span class="token punctuation">.</span>widget<span class="token punctuation">.</span><span class="token function">LinearLayout</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  layout<span class="token punctuation">.</span><span class="token function">setGravity</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>Gravity<span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  layout<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>LinearLayout<span class="token punctuation">.</span><span class="token constant">VERTICAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android</span><span class="token punctuation">.</span>widget<span class="token punctuation">.</span><span class="token function">Button</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  btn<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&#39;Ionic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  layout<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> layout<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>The source of the helper:</p><div class="language-typescript"><pre><code><span class="token keyword">let</span> DialogImpl<span class="token punctuation">;</span>\n<span class="token keyword">let</span> DialogFragmentImpl<span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>global<span class="token punctuation">.</span>android<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  @<span class="token function">NativeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">class</span> <span class="token class-name">DialogImplClass</span> <span class="token keyword">extends</span> <span class="token class-name">android</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span>Dialog <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span>fragment<span class="token punctuation">,</span> context<span class="token punctuation">,</span> themeResId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> themeResId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> global<span class="token punctuation">.</span><span class="token function">__native</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  DialogImpl <span class="token operator">=</span> DialogImplClass<span class="token punctuation">;</span>\n\n  @<span class="token function">NativeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">class</span> <span class="token class-name">DialogFragmentImplClass</span> <span class="token keyword">extends</span> <span class="token class-name">androidx</span><span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span>DialogFragment <span class="token punctuation">{</span>\n    <span class="token function-variable function">view</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token punctuation">;</span>\n    id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span>\n      <span class="token function-variable function">view</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token punctuation">,</span>\n      id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>view <span class="token operator">=</span> view<span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>\n      <span class="token keyword">return</span> global<span class="token punctuation">.</span><span class="token function">__native</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">onCreateDialog</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreateDialog</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> activity <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>global<span class="token punctuation">)</span><span class="token punctuation">.</span>androidCapacitorActivity<span class="token punctuation">;</span>\n\n      <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// In fullscreen mode, get the application&#39;s theme.</span>\n      <span class="token comment">// theme = activity.getApplicationInfo().theme;</span>\n      <span class="token keyword">const</span> dialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DialogImpl</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> activity<span class="token punctuation">,</span> theme<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      dialog<span class="token punctuation">.</span><span class="token function">setCanceledOnTouchOutside</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> dialog<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">onCreateView</span><span class="token punctuation">(</span>inflater<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> container<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> savedInstanceState<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  DialogFragmentImpl <span class="token operator">=</span> DialogFragmentImplClass<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">androidCreateDialog</span> <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token function-variable function">view</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token punctuation">,</span>\n  id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DialogFragmentImpl</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> fragmentManager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n    global\n  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>androidCapacitorActivity<span class="token punctuation">.</span><span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  df<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>fragmentManager<span class="token punctuation">,</span> id <span class="token operator">||</span> <span class="token function">uniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// general internal utility</span>\n<span class="token keyword">const</span> <span class="token function-variable function">uniqueId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token string">&#39;_&#39;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div>',16);p.render=function(s,t,p,e,c,u){return n(),a("div",null,[o])};export default p;export{t as __pageData};
