import{o as t,c as o,b as n}from"./app.0aaa57e5.js";const e='{"title":"Production Tips","description":"","frontmatter":{},"relativePath":"production-tips.md","lastUpdated":1613522705297}',i={},a=n('<h1 id="production-tips"><a class="header-anchor" href="#production-tips" aria-hidden="true">#</a> Production Tips</h1><p>You can add 2 additional flags to your NativeScript build when preparing your app for production.</p><ul><li><p><code>--env.uglify=true</code> Minifies the bundle.</p></li><li><p><code>--env.production=true</code> Bundles with webpack&#39;s production mode on.</p></li></ul><p>You can either add these to the provide build script or create your own production npm scripts, for example in your <code>package.json</code> scripts:</p><div class="language-shell"><pre><code><span class="token string">&quot;build:nativescript:prod&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;build-nativescript --env.uglify=true --env.production=true&quot;</span>,\n<span class="token string">&quot;build:mobile:prod&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;npm-run-all build build:nativescript:prod&quot;</span>\n</code></pre></div>',5);i.render=function(n,e,i,s,p,r){return t(),o("div",null,[a])};export default i;export{e as __pageData};
