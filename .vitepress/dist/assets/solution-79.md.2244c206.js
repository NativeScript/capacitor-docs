import{o as t,c as e,b as n}from"./app.4705c47d.js";const i='{"title":"Power Mode","description":"","frontmatter":{},"relativePath":"solution-79.md","lastUpdated":1613457771079}',o={},a=n('<h1 id="power-mode"><a class="header-anchor" href="#power-mode" aria-hidden="true">#</a> Power Mode</h1><p><a href="https://github.com/capacitor-community/proposals/issues/79" target="_blank" rel="noopener noreferrer">https://github.com/capacitor-community/proposals/issues/79</a></p><ul><li><code>src/nativescript/index.ts</code>:</li></ul><div class="language-"><pre><code>// Power Mode\nimport &#39;./power-mode&#39;;\n</code></pre></div><ul><li><code>src/nativescript/power-mode.ts</code>:</li></ul><div class="language-"><pre><code>let isListening = false;\nlet listener;\nlet listenerCallback;\nconst action = &quot;android.os.action.POWER_SAVE_MODE_CHANGED&quot;;\n\nnative.togglePowerModeListener = (\n\tcallback?: (isEnabled: boolean) =&gt; void\n) =&gt; {\n\tlistenerCallback = callback;\n\tif (native.android) {\n\t\tif (!isListening) {\n\t\t\tnative.androidCapacitorActivity.registerBroadcastReceiver(\n\t\t\t\taction,\n\t\t\t\t(context, intent) =&gt; {\n\t\t\t\t\tconst manager: android.os.PowerManager =\n\t\t\t\t\t\tnative.androidCapacitorActivity\n\t\t\t\t\t\t  .getSystemService(android.content.Context.POWER_SERVICE);\n\t\t\t\t\tif (manager &amp;&amp; listenerCallback) {\n\t\t\t\t\t\tlistenerCallback(manager.isPowerSaveMode());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tisListening = true;\n\t\t} else {\n\t\t\tnative.androidCapacitorActivity.unregisterBroadcastReceiver(action);\n      isListening = false;\n\t\t}\n\t} else {\n\t\tif (!isListening) {\n\t\t\tlistener = NSNotificationCenter.defaultCenter.addObserverForNameObjectQueueUsingBlock(\n\t\t\t\tNSProcessInfoPowerStateDidChangeNotification,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t(notif) =&gt; {\n\t\t\t\t\tif (listenerCallback) {\n\t\t\t\t\t\tlistenerCallback(NSProcessInfo.processInfo.lowPowerModeEnabled);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tisListening = true;\n\t\t} else {\n\t\t\tNSNotificationCenter.defaultCenter.removeObserver(listener);\n\t\t\tisListening = false;\n\t\t}\n\t}\n};\n\nnative.isInLowPowerMode = () =&gt; {\n\tif (native.android) {\n\t\tconst manager: android.os.PowerManager =\n\t\t\tnative.androidCapacitorActivity\n\t\t\t  .getSystemService(android.content.Context.POWER_SERVICE);\n\t\tif (manager) {\n\t\t\treturn manager.isPowerSaveMode();\n\t\t}\n\t} else {\n\t\treturn NSProcessInfo.processInfo.lowPowerModeEnabled;\n\t}\n\treturn false;\n};\n\n</code></pre></div>',6);o.render=function(n,i,o,r,s,l){return t(),e("div",null,[a])};export default o;export{i as __pageData};
